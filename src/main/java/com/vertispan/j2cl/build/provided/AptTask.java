package com.vertispan.j2cl.build.provided;

import com.google.auto.service.AutoService;
import com.vertispan.j2cl.build.*;

@AutoService(TaskFactory.class)
public class AptTask extends TaskFactory {

    @Override
    public String getOutputType() {
        return OutputTypes.GENERATED_SOURCES;
    }

    @Override
    public String getTaskName() {
        return "default";
    }

    @Override
    public Task resolve(Project project, Config config) {
        if (!project.hasSourcesMapped()) {
            // we explicitly don't copy the generated sources, they already exist in the proj sources
            return ignored -> {};
        }

        // we assume that bytecode was generated by javac, and will read the generated sources out of there
        Input myBytecode = input(project, OutputTypes.BYTECODE);

        return outputPath -> {

            // the BytecodeTask already did the work for us, just copy sources to output
            System.out.println("TODO " + getClass());

        };
    }
}
